name: CI Build

on: [ workflow_dispatch ]

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        include:
          - preset: clang-sanitize
            os: ubuntu-22.04
          - preset: gcc-release
            os: ubuntu-22.04
          - preset: gcc-11-release
            os: ubuntu-22.04
          - preset: gcc-debug-shared
            os: ubuntu-22.04
          - preset: gcc-debug-noexcept
            os: ubuntu-22.04
          - preset: macos-release
            os: macos-13
          - preset: win64-release
            os: windows-latest
          - preset: win64-debug-shared
            os: windows-latest
          - preset: win64-debug-noexcept
            os: windows-latest

    runs-on: ${{ matrix.os }}
    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Install dependencies
      if: matrix.os == 'ubuntu-22.04'
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo apt-key add -
        sudo add-apt-repository "deb http://apt.llvm.org/jammy/ llvm-toolchain-jammy-17 main"
        sudo add-apt-repository ppa:ubuntu-toolchain-r/test
        sudo apt-get update
        sudo apt-get install -y g++-13 g++-11 clang-17 clang-tidy-17
    - uses: ilammy/msvc-dev-cmd@v1
      if: matrix.os == 'windows-latest'
    - uses: maxim-lobanov/setup-xcode@v1
      if: matrix.os == 'macos-13'
      with:
        xcode-version: 'latest'
    - name: Configure
      run: cmake --preset ${{ matrix.preset }} -DSLANG_CI_BUILD=ON
    - name: Build
      run: cmake --build build/${{ matrix.preset }} -j8
    - name: Run tests
      run: ctest --test-dir build/${{ matrix.preset }} --output-on-failure --no-tests=error -j8
    - name: Archive binaries
      if: matrix.os == 'windows-latest'
      run: |
        Compress-Archive $HOME/slang/ slang-windows.zip
    - name: Upload artifacts
      if: matrix.os == 'windows-latest'
      uses: actions/upload-artifact@v2
      with:
        name: SLANG_ARTIFACT_WIN
        path: slang-windows.zip


